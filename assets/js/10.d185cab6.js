(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{411:function(t,a,e){"use strict";e.r(a);var s=e(2),n=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mybatis-plus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-plus"}},[t._v("#")]),t._v(" MyBatis-Plus")]),t._v(" "),a("p",[a("strong",[t._v("引入依赖")])]),t._v(" "),a("div",{staticClass:"language-pom extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" <dependency>\n      <groupId>com.baomidou</groupId>\n      <artifactId>mybatis-plus-boot-starter</artifactId>\n      <version>3.5.1</version>\n    </dependency>\n    <dependency>\n      <groupId>mysql</groupId>\n      <artifactId>mysql-connector-java</artifactId>\n      <scope>runtime</scope>\n    </dependency>\n </dependencies>\n")])])]),a("p",[t._v("entity层：属性类 一般得实体类对应一个数据表")]),t._v(" "),a("p",[t._v("dao层 ：数据访问层，全称为data access object")]),t._v(" "),a("p",[t._v("service层 ：业务逻辑层，可以理解为对一个或者多个dao进行得再次封装")]),t._v(" "),a("p",[t._v("controller层：负责请求转发")]),t._v(" "),a("p",[t._v("mapper层：数据存储对象，相当于DAO层，mapper层直接与数据库打交道(执行SQL语句)，接口提供给service层。")]),t._v(" "),a("p",[a("strong",[t._v("配置")])]),t._v(" "),a("ol",[a("li",[t._v("在启动类添加 @MapperScan注解")])]),t._v(" "),a("p",[t._v('@MapperScan("com.atguigu.mybatisplus.mapper")')]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("添加mapper")])]),t._v(" "),a("p",[t._v("BaseMapper是MyBatis-Plus提供的模板mapper，其中包含了基本的CRUD方法，泛型为操作的实体类型")])])}),[],!1,null,null,null);a.default=n.exports}}]);